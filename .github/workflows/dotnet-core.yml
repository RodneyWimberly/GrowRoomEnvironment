name: Build and Deploy GrowRoomEnvironment
on:
  push:
    branches: 
      - master 
  pull_request:
    branches: 
      - '*'
env:
  AZURE_WEBAPP_NAME: GRE-WebApp
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '3.1.301'   
  DOTNET_SOLUTION_NAME: 'GrowRoomEnvironment.sln'
  NUGET_VERSION: '5.0'
  NODE_VERSION: '12.19.0'
  ANGULAR_VERSION: 8.0.x
jobs:
  create-and-deploy:
    name: DevOps Pipeline
    runs-on: ubuntu-latest
    steps:
    # Get latest code
    - name: Clone Repository
      uses: actions/checkout@v2

    # Install .NET Core
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}  

    # Install NuGet
    - name: Install NuGet
      uses: NuGet/setup-nuget@v1.0.2
      with:
        nuget-version: ${{ env.NUGET_VERSION }} 

    # Install NodeJS
    - name: Install NodeJS 
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    # Set Angular Version
    - name: Install Angular
      run: |
        npm uninstall -g @angular/cli
        npm cache clean --force
        npm install -g .\web\clientapp

    # Run NuGet and DotNet Restore
    - name: Restore Dependencies
      run: |
        nuget restore ${{ env.DOTNET_SOLUTION_NAME }} 
        dotnet restore

    # Run dotnet build 
    - name: Build
      run: dotnet build --configuration Release --no-restore
          
    # Run dotnet publish
    - name: Publish
      run: |
        dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/webapp'
      
   # Deploy to Azure Web apps
    - name: Deploy
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} 
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/webapp'